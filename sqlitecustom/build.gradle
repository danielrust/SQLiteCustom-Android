import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'
apply plugin: 'maven'

def groupId = 'org.sqlite'
archivesBaseName = 'sqlite-android'
def versionMajor = 4
def versionMinor = 0
def versionPatch = 0
version = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath
        } else {
            commandLine ndkDir + '/ndk-build', '-C', file('src/main').absolutePath
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
}

clean {
    delete 'src/main/obj'
    delete 'src/main/libs'
}

task installLocal(type: Upload) {
    description "Installs the artifacts to the local Maven repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository (url: "file://${System.env.HOME}/.m2/repository/")
            pom.groupId = groupId
            pom.artifactId = archivesBaseName
            pom.version = version + "-" + new Date().format("yyyyMMdd")
            pom.packaging = 'aar'
            uniqueVersion = false // don't put in a timestamp on the filename (other project will not be able to depend on it)
        }

    }
}

task deploy(type: Upload) {
    description "Deploys the artifacts to the Nexus repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository(url: "https://code.lds.org/nexus/content/repositories/mobile-releases/") {
                authentication(userName: ldsmobileRepoUsername, password: ldsmobileRepoPassword)
            }
            pom.groupId = groupId
            pom.artifactId = archivesBaseName
            pom.version = version + "-" + new Date().format("yyyyMMdd")
            pom.packaging = 'aar'
            uniqueVersion = false // don't put in a timestamp on the filename (other project will not be able to depend on it)
        }

    }
}
